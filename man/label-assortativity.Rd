% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatial_neighborhood_stats.R
\name{RunLabelAssortativityTest}
\alias{RunLabelAssortativityTest}
\title{Label Assortativity Analysis}
\usage{
RunLabelAssortativityTest(
  object,
  column_name,
  n_permutations = 100,
  n_cores = parallel::detectCores() - 1,
  seed = 123,
  verbose = TRUE
)
}
\arguments{
\item{object}{A Seurat object}

\item{column_name}{Column name in metadata corresponding to label ID of the spots.}

\item{n_permutations}{Integer specifying number of iterations the labels should be randomized
[default: 100]. Recommended to increase the number of permutations to >=100 for more robust
results. A lower number of permutations will result in high standard deviations and thus more
unreliable output}

\item{n_cores}{Number of cores [default: parallel::detectCores() - 1]}

\item{seed}{A seed to use for reproducibility [default: 123]}

\item{verbose}{Print messages [default: TRUE]}
}
\value{
A tibble with scores for each label.
}
\description{
Performs a network assortativity test for each label, describing whether the spots of that
label displays a clustered or dispersed spatial pattern.
}
\details{
This analysis is inspired by the Newman's Assortativity measure by looking at the
average degree of spots belonging to the same class or label (specified with \code{column_name}).
The hypothesis that we want to address is that spots of the same label will lie next
to each other in an aggregated fashion, as compared to being randomly dispered throughout
the tissue. As the average degree within a label may change based on the total number of
observations, we scale it towards the maximum average degree (k) possible in the network (for
Visium, the theoretical max avg k is 6) and the minimum avg k you would expect to see if spots
are randomly dispered. With the \code{n_permutations} argument, you can specify the number of
iterations for generating a mean of the minimum avg k for each label.
The output of this function is a tibble table with entries for each label corresponding to
the observed avg k (`avg_k`), the mean of the randomized avg k (`min_avg_k_mean`), the standard
deviation of the randomized avg k (`min_avg_k_sd`), and the scaled avg k (`avg_k_scaled`), which
has been scaled towards the network max avg k (`k_max`) and thus goes from 0 (completely randomly
dispersed) to 1 (fully connected).
}
\examples{
library(semla)

# Read data
se <- readRDS(system.file("extdata/mousebrain",
                          "se_mbrain",
                          package = "semla"))

# Generate clusters
se <- se |>
  NormalizeData() |>
  ScaleData() |>
  FindVariableFeatures() |>
  RunPCA() |>
  FindNeighbors(reduction = "pca", dims = 1:30) |>
  FindClusters()

# Run Label Assortativity Analysis
res <- RunLabelAssortativityTest(object = se,
                                 column_name = "seurat_clusters",
                                 n_permutations = 100,
                                 n_cores = 2)

res |> arrange(desc(avg_k_scaled))


}
\seealso{
Other spatial-methods: 
\code{\link{CorSpatialFeatures}()},
\code{\link{CutSpatialNetwork}()},
\code{\link{DisconnectRegions}()},
\code{\link{GetSpatialNetwork}()},
\code{\link{RadialDistance}()},
\code{\link{RegionNeighbors}()},
\code{\link{RunLocalG}()},
\code{\link{RunNeighborhoodEnrichmentTest}()}
}
\author{
Lovisa Franz√©n
}
\concept{spatial-methods}
