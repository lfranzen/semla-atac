% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generics.R, R/nmf_methods.R
\name{RunNNLS}
\alias{RunNNLS}
\alias{RunNNLS.default}
\alias{RunNNLS.Seurat}
\title{Cell type prediction with NNLS}
\usage{
RunNNLS(object, ...)

\method{RunNNLS}{default}(
  object,
  singlecell_matrix,
  groups,
  nCells_per_group = 50L,
  minCells_per_celltype = 10L,
  min_prop = 0.01,
  L1 = 0.01,
  L2 = 0,
  seed = 1337L,
  return_expression_profiles = FALSE,
  verbose = TRUE,
  ...
)

\method{RunNNLS}{Seurat}(
  object,
  singlecell_object,
  groups = NULL,
  features = NULL,
  singlecell_assay = "RNA",
  spatial_assay = "Spatial",
  slot = "data",
  min_prop = 0.01,
  nCells_per_group = 50L,
  minCells_per_celltype = 10L,
  assay_name = "celltypeprops",
  dimred_name = "nnls",
  return_as_dimred = FALSE,
  L1 = 0.01,
  L2 = 0,
  seed = 1337L,
  verbose = TRUE,
  ...
)
}
\arguments{
\item{object}{A `Seurat` object with 10x Visium data}

\item{...}{Arguments passed to other methods}

\item{groups}{By default, the groups are taken from the sc_object identity.
Alternatively, a string can be provided specifying a column to use from the
se_object meta.data slot. The third option is to provide a character vector
of \code{length(ncol(sc_object))} with group IDs.}

\item{nCells_per_group}{Each cell type is down sampled to this number before
computing cell type expression profiles . This is mainly used to speed up
computation. Note that if a cell type has fewer than \code{nCells_per_group}
cells, the cells will be sampled with replacement to obtain \code{nCells_per_group}
cells.}

\item{minCells_per_celltype}{Minimum number of cells allowed per cell type}

\item{min_prop}{Minimum proportion allowed. Any proportion values lower than
this threshold will be removed and the remaining proportions will be rescaled.}

\item{seed}{An integer to set seed for reproducibility}

\item{return_expression_profiles}{Logical specifying if the expression profile matrix
should also be returned}

\item{verbose}{Print messages}

\item{singlecell_object}{A `Seurat` object with scRNA-seq data}

\item{features}{Features to use for computation. If no features are
provided, the intersection of variable features between sc_object and st_object
will be used. Note that the intersect can be quite small, in which case you can
increase the number of variable features by rerunning \code{FindVariableFeatures}
and increase the number with the `nfeatures` argument.}

\item{slot}{Name of slot in `sc_assay` and `st_assay` to use for deconvolution}

\item{sc_assay}{Assay in single cell data object to use for deconvolution}

\item{st_assay}{Assay in Visium data object to use for deconvolution}

\item{assay.name}{Sets the name of the returned `Assay` object. Only active
if return.as.dimred = FALSE.}

\item{dimred.name}{Sets the name of  the returned `DimReduc` object. Only
active if return.as.dimred = TRUE.}

\item{return.as.dimred}{Return results as a `DimReduc` object instead of an `Assay` object}
}
\value{
An object with cell type proportion estimates
}
\description{
This function can be used to project cell type expression
profiles onto a 10x Visium gene expression matrix to obtain
cell type proportion estimates. The method is suitable for
paired 10x Visium and scRNA-seq data. In other words, the
scRNA-seq data should represent the cell types present in
the 10x Visium spatial transcriptomics data.
Redundant cell types (i.e. cells that are present in the
scRNA-seq data but not in the data 10x Visium) or missing
cell types (i.e. cells that are present in the 10x Visium
data but not in the data scRNA-seq data) might affect the
results.

Preferably, the scRNA-seq data should be composed of the
same cell types as the tissue section(s) processed by 10x
Visium and be collected from the same tissue specimen.
This method is intended to be used as a fast cell type
mapping which is useful for data driven exploration.

We encourage users to explore alternative methods such as
stereoscope, cell2location or RCTD.

The method uses the NNLS implementation
from the `RcppML` R package developed by Zachary DeBruine.
}
\section{default method}{

Input `object` is a matrix-like object with 10x Visium data. The function returns
a matrix with estimated cell type proportions of dimensions nCellTypes x nSpots,
where nCellTypes is the number of cell types and nSpots is the number of spots.
If `return_expression_profiles=TRUE`, the returned object will be a list with estimated
and the cell type expression profle matrix.
}

\section{Seurat method}{

Input \code{object} is a \code{Seurat} object with 10x Visium data. The function returns
the \code{Seurat} object with either a new \code{Assay} or \code{DimReduc} object containing
estimated cell type proportions.
}

\references{
[RcppML](https://doi.org/10.1101/2021.09.01.458620)
[RcppML GitHub page](https://github.com/zdebruine/RcppML)
}
