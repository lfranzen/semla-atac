% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ftrviewer.R
\name{ftrviewer}
\alias{ftrviewer}
\title{Open a feature viewer react application}
\usage{
ftrviewer(
  host = "127.0.0.1",
  port = "8080",
  sampleID = 1,
  values,
  opacities,
  opacity = 1,
  range,
  scaleByOpacity = FALSE,
  isNumeric = TRUE,
  useLasso = FALSE,
  levels = character(),
  categories = character(),
  colors = rev(RColorBrewer::brewer.pal(n = 9, name = "Spectral")),
  container_width = 800,
  container_height = 800,
  elementId = NULL
)
}
\arguments{
\item{host}{The host address. Defaults to localhost "127.0.0.1"}

\item{port}{A number for a valid port}

\item{sampleID}{A section number}

\item{values}{A vector of numeric or categorical values}

\item{opacities}{A numeric vector of opacity values}

\item{opacity}{An integer of length 1 specifying a fixed opacity value}

\item{range}{A numeric vector of length 2 specifying a range of values (color domain)}

\item{scaleByOpacity}{A logical specifying if the opacity should be set by
\code{opacities} or \code{opacity}}

\item{isNumeric}{A logical specifying if the input is numeric or not}

\item{useLasso}{A logical specifying if the lasso selection tool should be activated}

\item{levels}{Category levels for coloring of values}

\item{categories}{A character vector with the categories available}

\item{colors}{A character vector of colors}

\item{container_width, container_height}{Container width/height in pixels}

\item{elementId}{The id of the viewer element}
}
\description{
This function will open a react application that listens can
be used to interactively visualize categorical or numeric features
as spatial maps. For the application to run properly, relevant data needs
to be available via a file server. This function is intended to be used
within a shiny app
}
\examples{
\dontrun{

library(semla)
se_mbrain <- readRDS(system.file("extdata/mousebrain", "se_mbrain", package = "semla"))
se_mbrain <- LoadImages(se_mbrain)

datapath <- ExportDataForViewer(se_mbrain, outdir = ".")

# Start file server
file_server(datapath)

# Run feature viewer widget
ftrviewer(values = as.numeric(se_mbrain$nFeature_Spatial), opacities = rep(1, ncol(se_mbrain)), isNumeric = TRUE,
          range = range(se_mbrain$nFeature_Spatial))

# Stop file server
beakr::stopAllServers()

}

}
