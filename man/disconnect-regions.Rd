% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generics.R, R/disconnect_regions.R
\name{DisconnectRegions}
\alias{DisconnectRegions}
\alias{DisconnectRegions.default}
\alias{DisconnectRegions.Seurat}
\title{Disconnect regions}
\usage{
DisconnectRegions(object, ...)

\method{DisconnectRegions}{default}(object, spots, verbose = TRUE, ...)

\method{DisconnectRegions}{Seurat}(
  object,
  column_name,
  select_groups = NULL,
  verbose = TRUE,
  ...
)
}
\arguments{
\item{object}{An object}

\item{...}{Arguments passed to other methods}

\item{spots}{A character vector with spot IDs present 'object'}

\item{verbose}{Print messages}

\item{column_name}{A character specifying the name of a column in your meta data that contains
categorical data, e.g. clusters or manual selections}

\item{select_groups}{A character vector to select specific groups in \code{column_name} with.
All groups are selected by default, but the common use case is to select a region of interest.}
}
\description{
This function allows you split spatially disconnected regions
belonging to the same category. In cases where a certain tissue type create
isolated "islands" in the tissue section, these islands can be separated. A
common example is tertiary lymphoid structures (TLS) which are typically
dispersed across a tissue section.
}
\section{default method}{

Takes a set of spot IDs and returns a named character vector with new labels.
The names of this vector corresponds to the input spot IDs.
}

\section{Seurat}{

A categorical variable is selected from the \code{Seurat} object meta data
slot using \code{column_name}. From this column, one can specify what groups
to disconnect with \code{select_groups}. If \code{select_groups} isn't specified,
all groups in \code{select_groups} will be disconnected separately.
The function returns a Seurat object with additional columns in the meta data
slot, one for each group in \code{select_groups}. The suffix to these columns is
"_split", so a group in \code{select_groups} called "tissue" will get a column
called "tissue_split" with new labels for each spatially disconnected region.
}

\examples{

library(STUtility2)
library(dplyr)
library(ggplot2)
library(patchwork)

galt_spots_file <- "~/STUtility2/repo/STUtility2/inst/extdata/mousecolon/galt_spots.csv"
galt_spots <- read.csv(galt_spots_file) |>
  as_tibble()

# read coordinates
coordfile <- system.file("extdata/mousecolon/spatial",
                         "tissue_positions_list.csv",
                         package = "STUtility2")
coords <- read.csv(coordfile, header = FALSE) |>
  filter(V2 == 1) |>
  select(V1, V6, V5) |>
  setNames(nm = c("barcode", "x", "y")) |>
  bind_cols(sampleID = 1) |>
  as_tibble()

# Select spots
spots <- galt_spots$barcode[galt_spots$selection == "GALT"]
head(spots)

# Find disconnected regions in GALT spots
disconnected_spot_labels <- DisconnectRegions(coords, spots)

# Add information to coords and plot
gg <- coords |>
  mutate(galt = NA, galt_disconnected = NA)
gg$galt[match(spots, gg$barcode)] <- "galt"
gg$galt_disconnected[match(names(disconnected_spot_labels), gg$barcode)] <- disconnected_spot_labels

p1 <- ggplot(gg, aes(x, y, color = galt))
p2 <- ggplot(gg, aes(x, y, color = galt_disconnected))
p <- p1 + p2 &
  geom_point() &
  theme_void() &
  coord_fixed()
p


library(STUtility2)
library(ggplot2)
library(patchwork)

se_mcolon <- readRDS(system.file("extdata/mousecolon", "se_mcolon", package = "STUtility2"))

# Plot selected variable
MapLabels(se_mcolon, column_name = "selection",
          pt_size = 3, override_plot_dims = TRUE)

# Disconnect regions
se_mcolon <- DisconnectRegions(se_mcolon, column_name = "selection", select_groups = "GALT")

# Plot split regions
MapLabels(se_mcolon, column_name = "GALT_split",
          pt_size = 3, override_plot_dims = TRUE)

# Note that if multiple sections are present, each section will be given
# it's own prefix in the disconnected groups.
se_merged <- MergeSTData(se_mcolon, se_mcolon)

# Plot selected variable
MapLabels(se_merged, column_name = "selection",
          pt_size = 3, override_plot_dims = TRUE) +
  plot_layout(guides = "collect") &
  theme(legend.position = "top")

# Disconnect regions
se_merged <- DisconnectRegions(se_merged, column_name = "selection", select_groups = "GALT")

# Plot split regions
MapLabels(se_merged, column_name = "GALT_split",
          pt_size = 3, override_plot_dims = TRUE) +
  plot_layout(guides = "collect") &
  theme(legend.position = "top")

}
