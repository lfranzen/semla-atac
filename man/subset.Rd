% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/subset_and_merge.R
\name{SubsetSTData}
\alias{SubsetSTData}
\title{Subset 10x Visium data}
\usage{
SubsetSTData(object, expression, spots = NULL, features = NULL, idents = NULL)
}
\arguments{
\item{object}{A Seurat object}

\item{expression}{Logical expression indicating features/variables to keep}

\item{spots}{A vector of spots to keep}

\item{features}{A vector of features to keep}

\item{idents}{A vector of identity classes to keep}
}
\value{
A filtered Seurat object
}
\description{
Subset a `Seurat` object while making sure that the spatial data
(images and spot coordinates) are handled correctly.
}
\details{
If you use the default \code{\link{subset}} function you will most likely not be able
to use any of the `semla` visualization methods on the output object as
the `Staffli` object will be broken. The exception is when filtering is only
done at the feature level.
}
\examples{

se_mbrain <- readRDS(system.file("extdata", "mousebrain/se_mbrain", package = "semla"))

# Create Seurat object
se_mbrain <- se_mbrain |> LoadImages()
se_mbrain

# Subset by spot IDs (first 100)
se_fewspots <- SubsetSTData(se_mbrain, spots = colnames(se_mbrain)[1:1000])
se_fewspots

# Subset by feature IDs (first 50)
se_fewgenes <- SubsetSTData(se_mbrain, features = rownames(se_mbrain)[1:50])
se_fewgenes

# Subset using an expression
se_filtered <- SubsetSTData(se_mbrain, expression = nFeature_Spatial > 20)
se_filtered

}
\seealso{
Other subset-and-merge: 
\code{\link{MergeSTData}()}
}
\author{
Ludvig Larsson
}
\concept{subset-and-merge}
