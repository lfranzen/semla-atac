% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tile_images.R
\name{TileImage}
\alias{TileImage}
\title{Tile an H&E image}
\usage{
TileImage(im, outpath = NULL, maxImgWidth = 10000, nCores = detectCores() - 1)
}
\arguments{
\item{im}{An image of class `magick-image`}

\item{nCores}{Number of cores to use for threading}

\item{maxZoom}{Max zoom level}
}
\value{
Path to tiles
}
\description{
This function takes an image of class `magick-image` and create a tile
map. The size of each tile is 256x256 pixels and the number of zoom levels
are determined rom the
}
\examples{
\donttest{
library(magick)
library(shiny)
library(leaflet)

# Load H&E image with magick
imfile <- system.file("extdata/mousecolon/spatial", "tissue_hires_image.png", package = "STUtility2")
im <- image_read(imfile)

# tile image and return path to tiles
tile_res <- TileImage(im)

# Create a simple viewer with leaflet
ui <- fluidPage(
  leafletOutput("map", height = 512, width = 512),
)

server <- function(input, output, session) {
  addResourcePath("mytiles", "/Users/ludviglarsson/Downloads/tiles")
  output$map <- renderLeaflet({
    leaflet(options = leafletOptions(preferCanvas = TRUE)) \%>\%
      addTiles(urlTemplate = "/mytiles/{z}/{x}_{y}.jpg",
               options = tileOptions(continuousWorld = TRUE,
                                     tileSize = "256",
                                     minZoom = paste0(res$minZoomLevel),
                                     maxZoom = paste0(res$maxZoomLevel)))
  })
}

shinyApp(ui, server)
}

}
