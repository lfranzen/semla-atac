% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tile_images.R
\name{TileImage}
\alias{TileImage}
\title{Tile an H&E image}
\usage{
TileImage(
  im,
  sampleID = 1,
  outpath = NULL,
  maxZoomLevel = 4,
  maxImgWidth = 10000,
  nCores = detectCores() - 1,
  overwrite = FALSE,
  verbose = TRUE
)
}
\arguments{
\item{im}{An image of class \code{magick-image}}

\item{sampleID}{The section number to use. This number will be appended to the output files names}

\item{outpath}{A string specifying an output directory to save the tiled image in.}

\item{maxZoomLevel}{Max zoom level}

\item{maxImgWidth}{Safety threshold to make sure that the zoom level doesn't get too deep.}

\item{nCores}{Number of cores to use for threading}

\item{overwrite}{If the the folder '<outpath>/viewer_data' already exists, it will be overwritten.}

\item{verbose}{Print messages}
}
\value{
A character vector with the tile path
}
\description{
This function takes an image of class \code{magick-image} and create a tile
map. The size of each tile is 256x256 pixels and the number of zoom levels
are determined from the automatically.
}
\examples{
\donttest{

library(magick)
library(shiny)
library(leaflet)

# Download hires image
he_img <- file.path("https://raw.githubusercontent.com/ludvigla/semla",
                    "main/images/mousebrain/tissue_hires_image.jpg")

# Load H&E image with magick
im <- magick::image_read(he_img)

# tile image and return path to tiles
tile_res <- TileImage(im, outpath = tempdir(), nCores = 1, overwrite = TRUE)

# Create a simple viewer with leaflet
ui <- fluidPage(
  leafletOutput("map", height = 512, width = 512),
)

server <- function(input, output, session) {
  addResourcePath("mytiles", tile_res$tilepath)
  output$map <- renderLeaflet({
    leaflet(options = leafletOptions(preferCanvas = TRUE)) \%>\%
      addTiles(urlTemplate = "/mytiles/{z}/{x}_{y}.jpg",
               options = tileOptions(continuousWorld = TRUE,
                                     tileSize = "256",
                                     minZoom = 1,
                                     maxZoom = 3))
  })
}
shinyApp(ui, server)
}

}
\author{
Ludvig Larsson
}
