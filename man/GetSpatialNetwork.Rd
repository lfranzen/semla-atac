% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spatial_network.R
\name{GetSpatialNetwork}
\alias{GetSpatialNetwork}
\title{Create Spatial Networks}
\usage{
GetSpatialNetwork(xys, nNeighbours = 6, maxDist = NULL, minK = 0)
}
\arguments{
\item{xys}{An object of class `tbl` or `data.frame` with four columns "barcode", "x", "y"
and "sample" holding the coordinates for a set of spots. The "barcode" column is a character
vector with spatial barcodes, "x", "y" hold numeric values representing the spot coordinates and
"sample" is a character vector with unique sample IDs.}

\item{nNeighbours}{Number of nearest neighbors to calculate for each spot. The default
number of neighbors is 6 for the 'Visium' platform and 4 for the '1k' and '2k' platforms.}

\item{maxDist}{Distance cut-off for nearest neighbors to consider. If set to NULL (default),
`maxDist` is estimated from the data by taking the minimum neighbor distance multiplied by
a factor of `1.2`.}

\item{minK}{Minimum nearest neighbors [default: 0]. Spots with fewer neighbors will be discarded.
Useful if you want to remove spots with few or no neighbors.}
}
\value{
A list of tibbles, each containing information about the nearest neighbors of each spot.
For one spot in the column "from", its nearest neighboring spots are provided in the "to" column.
Distances correspond to distances between "to" and "from", and usually correspond to H&E image
pixels. "numK" defines the number of nearest neighbors for "from" spots selected by `GetSpatialNetwork`.
"x_start", "y_start" are the spatial coordinates for "from" spots while "x_end", "y_end" are the
spatial coordinates for the neighboring "to" spots.
}
\description{
Create spatial networks from spatial coordinates. The function expects a `data.frame` or `tibble`
containing barcodes, coordinates and sample ids. One spatial network is created per sample and
the results are returned as a list.
}
\examples{
\dontrun{
library(ggplot2)

# Create a spatial network from a data.frame (xys)
spatnet <- GetSpatialNetwork(xys)

# Plot network
ggplot(spatnet[["1"]], aes(x = x_start, xend = x_end, y = y_start, yend = y_end)) +
   geom_segment()

}

}
\seealso{
Other network-methods: 
\code{\link{CorSpatialGenes}()}
}
\concept{network-methods}
